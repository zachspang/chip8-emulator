#include <cstring>
#include <fstream>
#include "cpu.h"

cpu::cpu() {
	unsigned char fontset[80] = {
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};

	memset(memory, 0, sizeof(memory));
	opcode = 0;
	memset(V, 0, sizeof(V));
	PC = 0x200; //ROM starts at 0x200
	I = 0;
	memset(stack, 0, sizeof(stack));
	sp = 0;
	delay_timer = 0;
	sound_timer = 0;
	memset(display, 0, sizeof(display));
	memset(keys, 0, sizeof(keys));

	//Load fontset into 0x50–0x9F
	for (int i = 0; i < 80; i++) {
		memory[0x50 + i] = fontset[i];
	}

}

bool cpu::load_rom(std::string file_path) {
	std::ifstream file(file_path, std::ios::in | std::ios::binary);

	if (!file.is_open()) {
		return false;
	}

	char c;

	for (int i = 0x200; file.get(c); i++) {
		memory[i] = c;
	}

	return true;
}